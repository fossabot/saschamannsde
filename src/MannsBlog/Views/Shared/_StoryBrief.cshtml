@*
Copyright (C) 2021 Sascha Manns <Sascha.Manns@outlook.de>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*@
@using MannsBlog.EntityFramework.Entities;
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@inject IViewLocalizer _localizer
@inject IConfiguration _config
@model BlogStory
@{
    var wordCount = @Model.Body; // Get all content of the story
    var counts = wordCount.Count(ch => ch == ' ') + 1;
    var minutes = counts / 200; // Calculate Minutes
    var seconds = counts % 200 / (200 / 60); // Calculate Seconds
    var strMinutes = (minutes == 1) ? _localizer["minute"].Value : _localizer["minutes"].Value;
    var strSeconds = (seconds == 1) ? _localizer["second"].Value : _localizer["seconds"].Value;

    var name = _config["Blog:UserFirstname"] + " " + _config["Blog:UserSurname"];

    string imgsrc = String.Empty;

    if (Model.Categories.Contains("Development"))
    {
        imgsrc = "https://raw.githubusercontent.com/Gapur/Gapur/master/coding.gif";
    }
    if ((Model.Categories.Contains("Opensource")))
    {
        imgsrc = "/img/markers/opensource.png";

    }
    if (Model.Categories.Contains("Linux"))
    {
        imgsrc = "/img/markers/tux.png";
    }
    if (Model.Categories.Contains("Windows"))
    {
        imgsrc = "/img/markers/Windows-10.png";
    }
    if (Model.Categories.Contains("C-Sharp"))
    {
        imgsrc = "/img/markers/c-sharp.png";
    }
    if (Model.Categories.Contains("Insider"))
    {
        imgsrc = "/img/markers/win-insider.png";
    }

}

<div class="container">
    <div class="row">
        <div tabindex="0" class="e-card" id="basic">
            <div class="card-header">
                <div class="e-card-header-caption">
                    <div class="e-card-header-title" class="margin-top: -40px;"><h4><a href=@Model.Slug>@Model.Title</a></h4></div>
                </div>
            </div>
            <div class="e-card-content">
                <div class="col-md-8">
                    <i class="fas fa-calendar"></i> @Model.DatePublished.ToString("MMMM dd, yyyy")
                    <i class="fas fa-edit"></i> @name
                    <i class="fas fa-comments"></i> <span class="disqus-comment-count" data-disqus-identifier="@Model.UniqueId">@_localizer["comments"]</span>.
                    <i class="fas fa-clock"></i> @minutes @strMinutes @seconds @strSeconds
                    <br />
                    <i class="fas fa-tags"></i>
                    @foreach (var tag in Model.Categories.Split(','))
                    {
                        <a asp-controller="Tag" asp-action="Index" asp-route-tag="@tag" asp-route-page="" class="btn">@tag</a>
                    }
                    @Html.Raw(Model.GetSummary())
                    <div class="e-card-actions">
                        <a href="@Model.Slug" id="btn-read" class="e-card-btn">@_localizer["btn-read"]</a>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="e-card-image">
                        <img width="100px" height="100px" style="margin-left: 900px; margin-top: -400px;" src="@imgsrc" alt="Category Image" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>