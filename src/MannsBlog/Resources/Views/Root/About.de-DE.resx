<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="amazon-page" xml:space="preserve">
    <value>Amazon Autorenseite</value>
  </data>
  <data name="bio" xml:space="preserve">
    <value>Sascha Manns ist ein deutscher Programmierer, Buchautor und Supporter. Er wirkte in der openSUSE Community als Paketierer, Herausgeber des wöchentlichen Newsletters, dem Wahlteam des Vorstandes und dem Team mit, welches neue Mitglieder des Projektes aufnimmt mit. Für die open-slx GmbH arbeitete er an der openSUSE Box mit, und schrieb Handbücher und Anleitungen. Zudem gab er für diese Box den Installationssupport.</value>
  </data>
  <data name="bio1" xml:space="preserve">
    <value>Er gründete eine an Ärzte und Krankenhäuser gerichtete, ebenfalls auf openSUSE basierende Distribution, welche bereits viele Software aus dem medizinischen Kontext mitbrachte. Es wurde speziell für Menschen in ärmeren Ländern entwickelt, welche sich die teueren proprietären Lösungen nicht leisten können.</value>
  </data>
  <data name="bio2" xml:space="preserve">
    <value>Nachdem er open-slx verlassen hatte, arbeitete er als Dispatcher, Autor für Geschäftsprozessdokumentation, als Programmierer für Business Workflow Apps und Webseiten, sowie als Programmierer für die Cachè Datenbank. Aktuell arbeitet er als C# Entwickler im E-Commerce Bereich.</value>
  </data>
  <data name="bio3" xml:space="preserve">
    <value>Sascha studierte Wirtschaftsinformatik, Fachinformatik in der Anwendungsentwicklung und lernte die Programmiersprachen Ruby, Python, JavaScript und C#.  Ergänzend absolvierte er einen SCRUM-Master-Kurs.</value>
  </data>
  <data name="coding-activity" xml:space="preserve">
    <value>Meine Programmieraktivitäten</value>
  </data>
  <data name="connect" xml:space="preserve">
    <value>Vernetzen wir uns</value>
  </data>
  <data name="opensource" xml:space="preserve">
    <value>Open Source Projekte</value>
  </data>
  <data name="publications" xml:space="preserve">
    <value>Publikationen</value>
  </data>
  <data name="publisher-published" xml:space="preserve">
    <value>Veröffentlicht</value>
  </data>
  <data name="supporter" xml:space="preserve">
    <value>Unterstützen Sie meine Open Source Projekte</value>
  </data>
  <data name="viewbag-pageblurp" xml:space="preserve">
    <value>Ein bisschen über mich und was ich so mache...</value>
  </data>
  <data name="viewbag-pagename" xml:space="preserve">
    <value>Über mich</value>
  </data>
  <data name="viewbag-title" xml:space="preserve">
    <value>Über mich - Sascha Manns's Twilight Zone</value>
  </data>
  <data name="supporter-company" xml:space="preserve">
    <value>Meine Unterstützer</value>
  </data>
  <data name="supporter-company-thx" xml:space="preserve">
    <value>Ich freue mich, das mich diese Firmen bei meiner Open Source Arbeit unterstützen.</value>
  </data>
</root>